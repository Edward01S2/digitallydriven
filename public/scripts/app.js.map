{"version":3,"sources":["webpack:///./resources/scripts/app.js","webpack:///external \"jQuery\""],"names":["Swiper","gsap","$","slidesPerView","grabCursor","spaceBetween","preventClicks","navigation","nextEl","prevEl","breakpoints","768","1024","allowTouchMove","640","url","window","e","duration","scrollTo","y","href","anchor","document","offsetY","navLinks","link","module","exports"],"mappings":"wLASAA,QAAW,CAAXA,MAQAC,sCAEAC,mBAAkB,WAwFI,IAAI,EAAJ,oBAA8B,CAChDC,cADgD,EAEhDC,YAFgD,EAGhDC,aAHgD,GAIhDC,eAJgD,EAKhDC,WAAY,CACVC,OADU,uBAEVC,OAAQ,wBAEVC,YAAa,CACXC,IAAK,CACHR,cADG,EAEHE,aAAc,IAEhBO,KAAO,CACLT,cADK,EAELE,aAFK,GAGLQ,gBAAgB,MAKF,IAAI,EAAJ,oBAA8B,CAChDV,cADgD,EAEhDC,YAFgD,EAGhDC,aAHgD,GAIhDC,eAJgD,EAKhDC,WAAY,CACVC,OADU,uBAEVC,OAAQ,wBAEVC,YAAa,CACXC,IAAK,CACHR,cADG,EAEHE,aAAc,IAEhBO,KAAO,CACLT,cADK,EAELE,aAFK,GAGLQ,gBAAgB,MAKF,IAAI,EAAJ,oBAA8B,CAChDV,cADgD,EAEhDC,YAFgD,EAGhDC,aAHgD,GAIhDC,eAJgD,EAKhDC,WAAY,CACVC,OADU,uBAEVC,OAAQ,wBAEVC,YAAa,CACXC,IAAK,CACHR,cADG,EAEHE,aAAc,IAEhBO,KAAO,CACLT,cADK,EAELE,aAFK,GAGLQ,gBAAgB,MAKD,IAAI,EAAJ,oBAA8B,CACjDV,cADiD,EAEjDC,YAFiD,EAGjDC,aAHiD,GAIjDC,eAJiD,EAKjDC,WAAY,CACVC,OADU,uBAEVC,OAAQ,wBAEVC,YAAa,CACXI,IAAK,CACHX,cADG,EAEHE,aAAc,IAEhBO,KAAO,CACLT,cAAe,MASA,IAAI,EAAJ,oBAA8B,CACjDA,cADiD,EAEjDC,YAFiD,EAGjDC,aAHiD,GAIjDC,eAJiD,EAKjDC,WAAY,CACVC,OADU,uBAEVC,OAAQ,wBAEVC,YAAa,CACXI,IAAK,CACHX,cADG,EAEHE,aAAc,IAEhBO,KAAO,CACLT,cAAe,MASrBD,6BAA4B,WAC1B,IACIa,EADUb,aAAd,aACA,MACA,IAAIa,IAKFC,2BAIJd,6BAA6B,YAC3Be,mBACAhB,eAAgB,CAACiB,SAAD,EAAcC,SAAU,CAACC,EAAG,QAG9ClB,2BAA2B,YACzB,IAAImB,EAAOJ,6BAAX,QACIK,EAASD,YAAeA,UAA5B,MAEGE,oCAAH,IACEN,mBACAhB,eAAgB,CAACiB,SAAD,IAAgBC,SAAU,CAACC,EAAD,EAAYI,QAAS,WAIlDvB,mBArOK,4BAuOtBwB,SAAiB,cACfC,4BAA+B,YAC7B,IAAIL,EAAOJ,6BAAX,QACIK,EAASD,YAAeA,UAA5B,MAEGE,oCAAH,IACEN,mBACAhB,eAAgB,CAACiB,SAAD,IAAgBC,SAAU,CAACC,EAAD,EAAYI,QAAS,kB,8DCjQvEG,EAAOC,QAAUZ,OAAe,S","file":"/scripts/app.js","sourcesContent":["/**\n * External Dependencies\n */\nimport 'jquery';\nimport 'alpinejs';\n\nimport { debounce } from 'underscore';\nimport Swiper, { Navigation } from 'swiper';\n\nSwiper.use([Navigation]);\n\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { ScrollToPlugin } from \"gsap/ScrollToPlugin\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\n\ngsap.registerPlugin(ScrollTrigger, ScrollToPlugin, Draggable, InertiaPlugin);\n\n$(document).ready(() => {\n  // console.log('Hello world');\n\n// if($('.home .slide').length) {\n//   const slides = document.querySelectorAll(\".home .slide\");\n//   const container = document.querySelector(\".home .slide-container\");\n//   let oldSlide = 0;\n//   let activeSlide = 0;\n//   let dur = 0.6;\n//   let offsets = [];\n//   let ih = window.innerHeight;\n\n\n//   // figure out which of the 4 nav controls called the function\n//     function slideAnim(e) {\n\n//     oldSlide = activeSlide;\n//     // dragging the panels\n//     if (this.id === \"dragger\") {\n//       activeSlide = offsets.indexOf(this.endY);\n//     } else {\n//       if (gsap.isTweening(container)) {\n//         return;\n//       }\n//       // up/down arrow clicks\n//       if (e.keyCode === 40 || e.keyCode === 38) {\n//         activeSlide = e.keyCode === 40 ? (activeSlide += 1) : (activeSlide -= 1);\n//         // click on a dot\n//       } else if (this.className === \"dot\") {\n//         activeSlide = this.index;\n//         // scrollwheel\n//       } else {\n//           //var delta = ((e.deltaY || -e.wheelDelta || e.detail) >> 10) || 1;\n//           //console.log(e.deltaY)\n//           // activeSlide = e.deltaY > 5 ? (activeSlide += 1) : (activeSlide -= 1);\n//           if(e.deltaY > 10) {\n//             activeSlide = activeSlide += 1;\n//           }\n//           if(e.deltaY < -10) {\n//             activeSlide = activeSlide -= 1;\n//           }\n//       }\n//     }\n//     // make sure we're not past the end or beginning slide\n//     activeSlide = activeSlide < 0 ? 0 : activeSlide;\n//     activeSlide = activeSlide > slides.length - 1 ? slides.length - 1 : activeSlide;\n//     if (oldSlide === activeSlide) {\n//       return;\n//     }\n//     // if we're dragging we don't animate the container\n//     if (this.id != \"dragger\") {\n//       gsap.to(container, dur, { y: offsets[activeSlide], ease:\"power2.inOut\" });\n//     }\n//   }\n\n//   window.addEventListener(\"wheel\", debounce(slideAnim, 20));\n//   window.addEventListener(\"resize\", newSize);\n//   $(document).on(\"keydown\", slideAnim);\n\n//   // make the container a draggable element\n//     let dragMe = Draggable.create(container, {\n//     type: \"y\",\n//     edgeResistance: 1,\n//     onDragEnd: slideAnim,\n//     snap: offsets,\n//     inertia:true,\n//     zIndexBoost: false,\n//     allowNativeTouchScrolling: false,\n//     bounds: \".slide-wrapper\"\n//   });\n\n//   dragMe[0].id = \"dragger\";\n//   newSize();\n\n//   // resize all panels and refigure draggable snap array\n//   function newSize() {\n//     offsets = [];\n//     ih = window.innerHeight;\n//     gsap.set(\".slide-container\", { height: slides.length * ih });\n//     gsap.set(slides, { height: ih });\n//     for (let i = 0; i < slides.length; i++) {\n//       offsets.push(-slides[i].offsetTop);\n//     }\n//     gsap.set(container, { y: offsets[activeSlide] });\n//     dragMe[0].vars.snap = offsets;\n//   }\n// }\n\n  const statSwiper1 = new Swiper('.stats-slider-1', {\n    slidesPerView: 1,\n    grabCursor: false,\n    spaceBetween: 24,\n    preventClicks: false,\n    navigation: {\n      nextEl: '.stats-swiper-next-1',\n      prevEl: '.stats-swiper-prev-1',\n    },\n    breakpoints: {\n      768: {\n        slidesPerView: 2,\n        spaceBetween: 48,\n      },\n      1024:  {\n        slidesPerView: 3,\n        spaceBetween: 48,\n        allowTouchMove: false,\n      },\n    }\n  });\n\n  const statSwiper2 = new Swiper('.stats-slider-2', {\n    slidesPerView: 1,\n    grabCursor: false,\n    spaceBetween: 24,\n    preventClicks: false,\n    navigation: {\n      nextEl: '.stats-swiper-next-2',\n      prevEl: '.stats-swiper-prev-2',\n    },\n    breakpoints: {\n      768: {\n        slidesPerView: 2,\n        spaceBetween: 48,\n      },\n      1024:  {\n        slidesPerView: 3,\n        spaceBetween: 48,\n        allowTouchMove: false,\n      },\n    }\n  });\n\n  const statSwiper3 = new Swiper('.stats-slider-3', {\n    slidesPerView: 1,\n    grabCursor: false,\n    spaceBetween: 24,\n    preventClicks: false,\n    navigation: {\n      nextEl: '.stats-swiper-next-3',\n      prevEl: '.stats-swiper-prev-3',\n    },\n    breakpoints: {\n      768: {\n        slidesPerView: 2,\n        spaceBetween: 48,\n      },\n      1024:  {\n        slidesPerView: 3,\n        spaceBetween: 48,\n        allowTouchMove: false,\n      },\n    }\n  });\n\n  const storySwiper1 = new Swiper('.story-slider-1', {\n    slidesPerView: 1,\n    grabCursor: false,\n    spaceBetween: 24,\n    preventClicks: false,\n    navigation: {\n      nextEl: '.story-swiper-next-1',\n      prevEl: '.story-swiper-prev-1',\n    },\n    breakpoints: {\n      640: {\n        slidesPerView: 2,\n        spaceBetween: 24,\n      },\n      1024:  {\n        slidesPerView: 3,\n      },\n      // 1536: {\n      //   slidesPerView: 4,\n      //   spaceBetween: 32,\n      // }\n    }\n  });\n\n  const storySwiper2 = new Swiper('.story-slider-2', {\n    slidesPerView: 1,\n    grabCursor: false,\n    spaceBetween: 24,\n    preventClicks: false,\n    navigation: {\n      nextEl: '.story-swiper-next-2',\n      prevEl: '.story-swiper-prev-2',\n    },\n    breakpoints: {\n      640: {\n        slidesPerView: 2,\n        spaceBetween: 24,\n      },\n      1024:  {\n        slidesPerView: 3,\n      },\n      // 1536: {\n      //   slidesPerView: 4,\n      //   spaceBetween: 32,\n      // }\n    }\n  });\n\n  $(\"#country-select\").change(function() {\n    var $option = $(this).find(':selected');\n    var url = $option.val();\n    if (url != \"\") {\n      //url += \"/countries/\" + country;\n      // Show URL rather than redirect\n      //$(\"#output\").text(url);\n      //console.log(url);\n      window.location.href = url;\n    }\n  });\n\n  $('.return-top').on('click', function(e) {\n    e.preventDefault();\n    gsap.to(window, {duration: 2, scrollTo: {y: 0}});\n  });\n\n  $('.find-btn').on('click', function(e) {\n    var href = e.currentTarget.getAttribute(\"href\")\n    var anchor = href.substring(href.indexOf(\"#\"))\n\n    if(document.querySelectorAll(anchor).length > 0) {\n      e.preventDefault();\n      gsap.to(window, {duration: 1.5, scrollTo: {y: anchor, offsetY: 100 }});\n    }\n  });\n\n  const navLinks = gsap.utils.toArray(\".nav-container .nav-link\");\n  //console.log(navLinks);\n  navLinks.forEach((link, i) => {\n    link.addEventListener(\"click\", function(e) {\n      var href = e.currentTarget.getAttribute(\"href\")\n      var anchor = href.substring(href.indexOf(\"#\"))\n\n      if(document.querySelectorAll(anchor).length > 0) {\n        e.preventDefault();\n        gsap.to(window, {duration: 1.5, scrollTo: {y: anchor, offsetY: 100 }});\n      }\n    });\n  });\n\n  // gsap.utils.toArray(\".slide\").forEach((box, i) => {\n  //   var id = box.getAttribute(\"id\");\n  //   gsap.to(box, {\n  //     scrollTrigger: {\n  //       trigger: box,\n  //       start: \"top 60%\",\n  //       end: \"bottom 20%\",\n  //       //markers: true,\n  //       toggleClass: {targets: \".nav-container a[href='#\" + id + \"']\", className: \"active\"},\n  //     },\n  //   });\n  // });\n\n});\n","module.exports = window[\"jQuery\"];"],"sourceRoot":""}